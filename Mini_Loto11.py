import streamlit as st
import random
import base64

# --- –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ñ–æ–Ω–∞ –∏–∑ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Ñ–∞–π–ª–∞ ---
def set_background(image_file):
    with open(image_file, "rb") as img_file:
        encoded = base64.b64encode(img_file.read()).decode()
    st.markdown(
        f"""
        <style>
        .stApp {{
            background-image: url("data:image/png;base64,{encoded}");
            background-size: cover;
            background-position: center;
            background-repeat: no-repeat;
        }}
        </style>
        """,
        unsafe_allow_html=True
    )

set_background("fd11ad4d9dc434b5c0e02f9b950d20dc.jpg")  # ‚Üê –ø—É—Ç—å –∫ –ª–æ–∫–∞–ª—å–Ω–æ–º—É –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é

# --- Streamlit –õ–æ—Ç–æ –ö–∞–∑–∏–Ω–æ ---
st.set_page_config(page_title="üé∞ –ú–∏–Ω–∏ –õ–æ—Ç–æ –ö–∞–∑–∏–Ω–æ", layout="centered")

st.title("üé∞ –ú–∏–Ω–∏ –õ–æ—Ç–æ –ö–∞–∑–∏–Ω–æ")

if "balance" not in st.session_state:
    st.session_state.balance = 1000
if "history" not in st.session_state:
    st.session_state.history = []

code = st.text_input("üîê –í–≤–µ–¥–∏—Ç–µ –∫–æ–¥ –¥–æ—Å—Ç—É–ø–∞>>>1234", type="password")
if code != "1234":
    st.warning("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –∫–æ–¥")
    st.stop()

st.success("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∫–∞–∑–∏–Ω–æ –º–∏–Ω–∏-–ª–æ—Ç–æ!")
st.markdown(f"üí≥ **–ë–∞–ª–∞–Ω—Å: {st.session_state.balance} ‚Ç∏**")

st.subheader("üìù –°–¥–µ–ª–∞–π—Ç–µ —Å—Ç–∞–≤–∫—É –∏ –≤—ã–±–µ—Ä–∏—Ç–µ 5 —á–∏—Å–µ–ª")
bet = st.number_input("üí∞ –í–∞—à–∞ —Å—Ç–∞–≤–∫–∞ (‚Ç∏):", min_value=10, max_value=500, step=10)
numbers = st.multiselect("üî¢ –í—ã–±–µ—Ä–∏—Ç–µ 5 —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö —á–∏—Å–µ–ª –æ—Ç 1 –¥–æ 20:", list(range(1, 21)), max_selections=5)

if st.button("üé≤ –ò–≥—Ä–∞—Ç—å!"):
    if st.session_state.balance < bet:
        st.error("–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –±–∞–ª–∞–Ω—Å–∞!")
    elif len(numbers) != 5:
        st.warning("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —Ä–æ–≤–Ω–æ 5 —á–∏—Å–µ–ª!")
    else:
        draw = random.sample(range(1, 21), 5)
        matches = len(set(numbers) & set(draw))

        # –í—ã–∏–≥—Ä—ã—à –ø–æ —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è–º
        win_table = {5: 20, 4: 10, 3: 5}
        multiplier = win_table.get(matches, 0)
        win = bet * multiplier

        st.session_state.balance += win - bet
        st.session_state.history.append((numbers, draw, matches, win - bet))

        st.markdown("## üéâ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã:")
        st.write(f"üéØ –í–∞—à–∏ —á–∏—Å–ª–∞: {numbers}")
        st.write(f"üé∞ –í—ã–ø–∞–≤—à–∏–µ —á–∏—Å–ª–∞: {draw}")
        st.success(f"üîó –°–æ–≤–ø–∞–¥–µ–Ω–∏–π: {matches} ‚Äî {'+' if win - bet >= 0 else ''}{win - bet} ‚Ç∏")

# –ò—Å—Ç–æ—Ä–∏—è
if st.session_state.history:
    st.subheader("üìú –ò—Å—Ç–æ—Ä–∏—è –∏–≥—Ä")
    for i, (nums, res, match, change) in enumerate(reversed(st.session_state.history[-5:])):
        st.markdown(f"**#{len(st.session_state.history)-i}** ‚Äî üéØ –ß–∏—Å–ª–∞: {nums}, üé∞ –í—ã–ø–∞–ª–∏: {res}, ‚úÖ –°–æ–≤–ø–∞–¥–µ–Ω–∏—è: {match}, üí∏ –ò–∑–º–µ–Ω–µ–Ω–∏–µ: {'+' if change>=0 else ''}{change} ‚Ç∏")
