import streamlit as st
import random

# --- –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã ---
st.set_page_config(page_title="üé∞ –ú–∏–Ω–∏ –õ–æ—Ç–æ –ö–∞–∑–∏–Ω–æ", layout="centered")

# --- –ö–∞–∑–∏–Ω–æ-—Å—Ç–∏–ª—å: —Ñ–æ–Ω –∏ —Å—Ç–∏–ª–∏ ---
st.markdown("""
    <style>
    body {
        background-image: url("https://images.unsplash.com/photo-1549924231-f129b911e442?auto=format&fit=crop&w=1500&q=80");
        background-size: cover;
    }
    .main {
        background-color: rgba(0, 0, 0, 0.75);
        padding: 2rem;
        border-radius: 15px;
    }
    h1, h2, h3, h4, h5, h6, p, div, label {
        color: white !important;
    }
    .stButton>button {
        background-color: #ff4b4b;
        color: white;
        border-radius: 10px;
        padding: 0.5rem 1rem;
        border: none;
    }
    .stButton>button:hover {
        background-color: #ff7777;
    }
    </style>
""", unsafe_allow_html=True)

# --- –°–µ—Å—Å–∏—è ---
if "balance" not in st.session_state:
    st.session_state.balance = 1000  # –Ω–∞—á–∞–ª—å–Ω—ã–π –±–∞–ª–∞–Ω—Å

if "history" not in st.session_state:
    st.session_state.history = []

# --- –î–æ—Å—Ç—É–ø –ø–æ –∫–æ–¥—É ---
st.title("üé∞ –ú–∏–Ω–∏ –õ–æ—Ç–æ –ö–∞–∑–∏–Ω–æ")

code_input = st.text_input("üîê –í–≤–µ–¥–∏—Ç–µ –∫–æ–¥ –¥–æ—Å—Ç—É–ø–∞ > 1234:", type="password")
if code_input != "1234":
    st.warning("–í–≤–µ–¥–∏—Ç–µ –≤–µ—Ä–Ω—ã–π –∫–æ–¥ –¥–æ—Å—Ç—É–ø–∞.")
    st.stop()

st.success("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∫–∞–∑–∏–Ω–æ –º–∏–Ω–∏-–ª–æ—Ç–æ!")

# --- –ë–∞–ª–∞–Ω—Å ---
st.markdown(f"### üí≥ –ë–∞–ª–∞–Ω—Å: **{st.session_state.balance}** ‚Ç∏")

# --- –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –∏–≥—Ä—ã ---
st.header("üìã –°–¥–µ–ª–∞–π—Ç–µ —Å—Ç–∞–≤–∫—É –∏ –≤—ã–±–µ—Ä–∏—Ç–µ 5 —á–∏—Å–µ–ª")
bet = st.number_input("üí∞ –í–∞—à–∞ —Å—Ç–∞–≤–∫–∞ (‚Ç∏):", min_value=10, max_value=st.session_state.balance, step=10)

user_numbers = st.multiselect("üéØ –í—ã–±–µ—Ä–∏—Ç–µ 5 —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö —á–∏—Å–µ–ª –æ—Ç 1 –¥–æ 20:",
                              options=list(range(1, 21)),
                              max_selections=5)

if st.button("üé≤ –ò–≥—Ä–∞—Ç—å!"):
    if len(user_numbers) != 5:
        st.error("‚ùó –ù—É–∂–Ω–æ –≤—ã–±—Ä–∞—Ç—å —Ä–æ–≤–Ω–æ 5 —á–∏—Å–µ–ª.")
    elif bet > st.session_state.balance:
        st.error("‚ùó –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤.")
    else:
        # –ò–≥—Ä–∞
        winning_numbers = random.sample(range(1, 21), 5)
        matches = set(user_numbers) & set(winning_numbers)
        match_count = len(matches)

        # –ö–æ–º–±–∏–Ω–∞—Ü–∏–∏ –∏ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç—ã
        combo_map = {
            0: ("‚ùå –ù–µ—Ç —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π", 0),
            1: ("‚ö™ 1 —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ", 0),
            2: ("üü° 2 —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è", 0),
            3: ("üü¢ 3 —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è (x2)", 2),
            4: ("üîµ 4 —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è (x5)", 5),
            5: ("üü£ –î–∂–µ–∫–ø–æ—Ç! 5 —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π (x10)", 10),
        }
        combo_name, multiplier = combo_map[match_count]
        win_amount = bet * multiplier

        # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞
        st.session_state.balance -= bet
        st.session_state.balance += win_amount

        # –î–æ–±–∞–≤–∏—Ç—å –≤ –∏—Å—Ç–æ—Ä–∏—é
        st.session_state.history.insert(0, {
            "—Å—Ç–∞–≤–∫–∞": bet,
            "—á–∏—Å–ª–∞": sorted(user_numbers),
            "–≤—ã–ø–∞–ª–∏": sorted(winning_numbers),
            "—Å–æ–≤–ø–∞–¥–µ–Ω–∏—è": match_count,
            "–∫–æ–º–±–∏–Ω–∞—Ü–∏—è": combo_name,
            "–≤—ã–∏–≥—Ä—ã—à": win_amount
        })

        # –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ
        st.subheader("üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã:")
        st.write("üéüÔ∏è –í–∞—à–∏ —á–∏—Å–ª–∞:", sorted(user_numbers))
        st.write("üé≤ –í—ã–ø–∞–≤—à–∏–µ —á–∏—Å–ª–∞:", sorted(winning_numbers))
        st.write("‚úÖ –°–æ–≤–ø–∞–¥–µ–Ω–∏—è:", f"{match_count} ‚Äî {combo_name}")
        if win_amount > 0:
            st.success(f"üéâ –í—ã –≤—ã–∏–≥—Ä–∞–ª–∏: {win_amount} ‚Ç∏")
        else:
            st.error("üò¢ –í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏ —ç—Ç—É —Å—Ç–∞–≤–∫—É.")

        st.markdown(f"### üí≥ –ù–æ–≤—ã–π –±–∞–ª–∞–Ω—Å: **{st.session_state.balance}** ‚Ç∏")

# --- –ò—Å—Ç–æ—Ä–∏—è —Å—Ç–∞–≤–æ–∫ ---
with st.expander("üßæ –ò—Å—Ç–æ—Ä–∏—è —Å—Ç–∞–≤–æ–∫ (–ø–æ—Å–ª–µ–¥–Ω–∏–µ 5 –∏–≥—Ä)"):
    if not st.session_state.history:
        st.info("–ò—Å—Ç–æ—Ä–∏—è –ø—É—Å—Ç–∞. –ù–∞—á–Ω–∏ –∏–≥—Ä–∞—Ç—å!")
    else:
        for i, entry in enumerate(st.session_state.history[:5]):
            st.markdown(f"**üéØ –ò–≥—Ä–∞ #{i+1}:**")
            st.markdown(f"- –°—Ç–∞–≤–∫–∞: {entry['—Å—Ç–∞–≤–∫–∞']} ‚Ç∏")
            st.markdown(f"- –ß–∏—Å–ª–∞: {entry['—á–∏—Å–ª–∞']}")
            st.markdown(f"- –í—ã–ø–∞–ª–∏: {entry['–≤—ã–ø–∞–ª–∏']}")
            st.markdown(f"- –°–æ–≤–ø–∞–¥–µ–Ω–∏—è: {entry['—Å–æ–≤–ø–∞–¥–µ–Ω–∏—è']} ‚Äî {entry['–∫–æ–º–±–∏–Ω–∞—Ü–∏—è']}")
            st.markdown(f"- üí∞ –í—ã–∏–≥—Ä—ã—à: {entry['–≤—ã–∏–≥—Ä—ã—à']} ‚Ç∏")
            st.markdown("---")

# --- –ü–æ–¥–≤–∞–ª ---
st.caption("¬© 2025 –ú–∏–Ω–∏ –õ–æ—Ç–æ –ö–∞–∑–∏–Ω–æ | –£–¥–∞—á–∏ –∏ –≤—ã–∏–≥—Ä—ã—à–µ–π!")
