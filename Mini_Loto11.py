import streamlit as st
import random
import time
from PIL import Image

# --- –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã ---
st.set_page_config(page_title="üé∞ –ú–∏–Ω–∏ –õ–æ—Ç–æ –ö–∞–∑–∏–Ω–æ", layout="centered")

# --- –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ñ–æ–Ω–æ–≤–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è (–ª–æ–∫–∞–ª—å–Ω—ã–π —Ñ–∞–π–ª) ---
def set_background(image_file):
    with open(image_file, "rb") as image:
        encoded = image.read()
    st.markdown(
        f"""
        <style>
        .stApp {{
            background-image: url("data:image/png;base64,{encoded.encode('base64').decode()}");
            background-size: cover;
            background-position: center;
        }}
        </style>
        """,
        unsafe_allow_html=True
    )

set_background("i.webp")

# --- –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–µ—Å—Å–∏–∏ ---
if "balance" not in st.session_state:
    st.session_state.balance = 1000
if "history" not in st.session_state:
    st.session_state.history = []

# --- –ó–∞–≥–æ–ª–æ–≤–æ–∫ –∏ –≤—Ö–æ–¥ ---
st.title("üé∞ –ú–∏–Ω–∏ –õ–æ—Ç–æ –ö–∞–∑–∏–Ω–æ")
code_input = st.text_input("üîê –í–≤–µ–¥–∏—Ç–µ –∫–æ–¥ –¥–æ—Å—Ç—É–ø–∞:", type="password")
if code_input != "1234":
    st.warning("–í–≤–µ–¥–∏—Ç–µ –≤–µ—Ä–Ω—ã–π –∫–æ–¥.")
    st.stop()
else:
    st.success("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!")

st.markdown(f"### üí≥ –ë–∞–ª–∞–Ω—Å: **{st.session_state.balance}‚Ç∏**")

# --- –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –∏–≥—Ä—ã ---
st.header("üìã –°—Ç–∞–≤–∫–∞ –∏ –≤—ã–±–æ—Ä —á–∏—Å–µ–ª")
bet = st.number_input("üí∞ –°—Ç–∞–≤–∫–∞ (‚Ç∏):", min_value=10, max_value=st.session_state.balance, step=10)
user_numbers = st.multiselect("üéØ –í—ã–±–µ—Ä–∏—Ç–µ 5 —á–∏—Å–µ–ª –æ—Ç 1 –¥–æ 20:", list(range(1, 21)), max_selections=5)

# --- –ö–Ω–æ–ø–∫–∞ –∑–∞–ø—É—Å–∫–∞ ---
if st.button("üé≤ –ö—Ä—É—Ç–∏—Ç—å –±–∞—Ä–∞–±–∞–Ω—ã!"):
    if len(user_numbers) != 5:
        st.error("–ù—É–∂–Ω–æ –≤—ã–±—Ä–∞—Ç—å —Ä–æ–≤–Ω–æ 5 —á–∏—Å–µ–ª.")
    else:
        st.session_state.balance -= bet
        winning_numbers = []

        st.subheader("üé° –í—Ä–∞—â–µ–Ω–∏–µ –±–∞—Ä–∞–±–∞–Ω–æ–≤...")
        with st.container():
            bar_cols = st.columns(5)
            for i in range(5):
                with bar_cols[i]:
                    st.markdown("#### üé∞")
                    num = random.randint(1, 20)
                    time.sleep(0.3)
                    winning_numbers.append(num)
                    st.markdown(f"<h2 style='text-align:center;color:#FFD700'>{num}</h2>", unsafe_allow_html=True)

        # –ü–æ–¥—Å—á–µ—Ç —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π
        matches = set(user_numbers) & set(winning_numbers)
        match_count = len(matches)
        combo_map = {
            0: ("‚ùå –ù–µ—Ç —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π", 0),
            1: ("‚ö™ 1 —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ", 0),
            2: ("üü° 2 —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è", 0),
            3: ("üü¢ 3 —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è (x2)", 2),
            4: ("üîµ 4 —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è (x5)", 5),
            5: ("üü£ –î–∂–µ–∫–ø–æ—Ç! 5 —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π (x10)", 10),
        }
        combo_name, multiplier = combo_map[match_count]
        win_amount = bet * multiplier
        st.session_state.balance += win_amount

        st.subheader("üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã:")
        st.markdown(f"**–í—ã–∏–≥—Ä—ã—à–Ω—ã–µ —á–∏—Å–ª–∞:** `{sorted(winning_numbers)}`")
        st.markdown(f"**–í–∞—à–∏ —á–∏—Å–ª–∞:** `{sorted(user_numbers)}`")
        st.markdown(f"**–°–æ–≤–ø–∞–¥–µ–Ω–∏—è:** {match_count} ‚Äî {combo_name}")
        if win_amount > 0:
            st.success(f"üéâ –í—ã –≤—ã–∏–≥—Ä–∞–ª–∏ {win_amount} ‚Ç∏!")
        else:
            st.error("üò¢ –£–≤—ã, –Ω–∏—á–µ–≥–æ –Ω–µ –≤—ã–∏–≥—Ä–∞–Ω–æ.")

        # –ò—Å—Ç–æ—Ä–∏—è
        st.session_state.history.insert(0, {
            "—Å—Ç–∞–≤–∫–∞": bet,
            "–≤–∞—à–∏": sorted(user_numbers),
            "–≤—ã–ø–∞–ª–∏": sorted(winning_numbers),
            "—Å–æ–≤–ø–∞–¥–µ–Ω–∏—è": match_count,
            "–∫–æ–º–±–∏–Ω–∞—Ü–∏—è": combo_name,
            "–≤—ã–∏–≥—Ä—ã—à": win_amount
        })

        st.markdown(f"### üí≥ –ù–æ–≤—ã–π –±–∞–ª–∞–Ω—Å: **{st.session_state.balance}‚Ç∏**")

# --- –ò—Å—Ç–æ—Ä–∏—è —Å—Ç–∞–≤–æ–∫ ---
with st.expander("üßæ –ò—Å—Ç–æ—Ä–∏—è —Å—Ç–∞–≤–æ–∫"):
    if not st.session_state.history:
        st.info("–ò—Å—Ç–æ—Ä–∏—è –ø–æ–∫–∞ –ø—É—Å—Ç–∞.")
    else:
        for h in st.session_state.history[:5]:
            st.markdown(f"""
            - üéØ –í–∞—à–∏: {h['–≤–∞—à–∏']}
            - üé∞ –í—ã–ø–∞–ª–∏: {h['–≤—ã–ø–∞–ª–∏']}
            - ‚úÖ –°–æ–≤–ø–∞–¥–µ–Ω–∏—è: {h['—Å–æ–≤–ø–∞–¥–µ–Ω–∏—è']} ({h['–∫–æ–º–±–∏–Ω–∞—Ü–∏—è']})
            - üí∏ –í—ã–∏–≥—Ä—ã—à: {h['–≤—ã–∏–≥—Ä—ã—à']} ‚Ç∏
            - üíµ –°—Ç–∞–≤–∫–∞: {h['—Å—Ç–∞–≤–∫–∞']} ‚Ç∏
            ---
            """)

st.caption("¬© 2025 –ú–∏–Ω–∏ –õ–æ—Ç–æ –ö–∞–∑–∏–Ω–æ")
